select 'Number of requests' AS' ';
select count(*) from taxi_order;
select 'Number of requests per status' AS' ';
select status,count(*) from taxi_order group by status;
select 'total cabs used' AS' ';
select count(distinct(cab_id)) from taxi_order;
select 'avg requested distance' AS' ';
select avg(distance) from taxi_order;
select 'total wait (pick-up) time (secs)' AS' ';
select sum(TIMESTAMPDIFF(second, received, started)) from taxi_order where received is not null and started is not null;
select 'total duration of all requests' AS' ';
select sum(TIMESTAMPDIFF(second, timestampadd(second, 60,started), completed)) from taxi_order where completed is not null and started is not null;
select 'total distance driven' AS' ';
select sum(TIMESTAMPDIFF(second, started, completed)) from leg where completed is not null and started is not null;
select 'number of customers in pool' AS' ';
select in_pool,count(*) from taxi_order group by in_pool;
select 'number of customers in pool - distribution' AS' ';
select order_count, COUNT(*) AS route_count from (SELECT route.id, count(taxi_order.id) as order_count from route left join taxi_order on (route.id = taxi_order.route_id) group by route.id) AS aa GROUP BY order_count;
select 'number of customers in legs - distribution' AS' ';
select passengers,count(*) from leg group by passengers;
select 'average pool size' AS' ';
select sum(order_count*route_count)/sum(route_count) FROM (SELECT order_count, COUNT(*) AS route_count from (SELECT route.id, count(taxi_order.id) as order_count from route left join taxi_order on (route.id = taxi_order.route_id) group by route.id) AS aa GROUP BY order_count) as counts;
select 'average passenger count in legs' AS' ';
select sum(passengers*pass_count)/sum(pass_count) from (select passengers,count(*) as pass_count from leg group by passengers) as average;
select 'average number of legs per route' AS' ';
select (select count(*) from leg) / (select count(*) from route);
select 'total number of customers rejected' AS' ';
select count(*) from taxi_order where status=3;
select 'number of request with exceeded detour' AS' ';
select count(*) from taxi_order where distance*60*((100+max_loss)/100) < TIMESTAMPDIFF(second, started, completed) -60;
select 'avg detour: total duration / total requested distance (we measure distance with time)' AS' ';
select ((select sum(TIMESTAMPDIFF(second, timestampadd(second, 60,started), completed)) from taxi_order where completed is not null and started is not null) / (select sum(distance*60) from taxi_order where completed is not null and started is not null)) as avg_detour;
select 'total number of routes' AS' ';
select count(*) from route;
select 'number of pickup legs without a passenger' AS' ';
select count(l.id) from leg l where l.place=0 AND l.from_stand not in (select from_stand FROM taxi_order o, route r WHERE r.id=l.route_id AND o.route_id=l.route_id);
select 'total distance of pickup legs without a passenger (in minutes)' AS' ';
select sum(l.distance) from leg l where l.place=0 AND l.from_stand not in (select from_stand FROM taxi_order o, route r WHERE r.id=l.route_id AND o.route_id=l.route_id);
select 'number of pickup legs without a passenger (2nd method)' AS' ';
select count(id) from leg where place=0 AND passengers=0;
select 'Percentage of routes with first leg without a passenger (2nd method)' AS' ';
select (select count(*) from leg where place=0 AND passengers=0) / (select count(*) from route);
select 'total distance of pickup legs without a passenger (in minutes. 2nd method)' AS' ';
select sum(distance) from leg where place=0 AND passengers=0;
select 'total number of legs without a passenger' AS' ';
select count(id) from leg where passengers=0;
select 'total number of legs' AS' ';
select count(*) from leg;
select 'max scheduler time (seconds)' AS' ';
select * from stat where name='MaxShedulerTime';
select 'average scheduler time (seconds)' AS' ';
select * from stat where name='AvgShedulerTime';
select 'average pool finder input size (demand)' AS' ';
select * from stat where name='AvgPoolDemandSize';
select 'average solver input size (demand)' AS' ';
select * from stat where name='AvgSolverDemandSize';
select 'Error: routes with cab assigned to two routes at a time (check of routes start)' AS' ';
select count(distinct(r1.id)) from route r1, route r2, leg where r1.cab_id = r2.cab_id and r1.id != r2.id and (select started from leg where route_id=r2.id and place=0) > (select started from leg where route_id=r1.id and place=0) and (select started from leg where route_id=r2.id and place=0) < ( select completed from leg where route_id=r1.id and place=(select max(place) from leg where route_id=r1.id));
select 'Error: routes with cab assigned to two routes at a time (check of routes end)' AS' ';
select count(distinct(r1.id)) from route r1, route r2, leg where r1.cab_id = r2.cab_id and r1.id != r2.id and (select completed from leg where route_id=r2.id and place=(select max(place) from leg where route_id=r2.id)) > (select started from leg where route_id=r1.id and place=0) and (select completed from leg where route_id=r2.id and place=(select max(place) from leg where route_id=r2.id)) < (select completed from leg where route_id=r1.id and place=(select max(place) from leg where route_id=r1.id));
select 'Error: legs starting in wrong stand' AS' ';
select count(l2.id) from leg l1, leg l2 where l1.route_id=l2.route_id and l1.place = l2.place-1 and l1.to_stand != l2.from_stand;
select 'Error: orders with stands not in legs of the route' AS' ';
select count(*) from taxi_order o where from_stand not in (select from_stand from leg l where l.route_id = o.route_id) or to_stand not in (select to_stand from leg l where l.route_id = o.route_id);
select 'Error: legs that have stands that no one ordered' AS' ';
select count(*) from leg l where to_stand not in (select from_stand from taxi_order o where l.route_id=o.route_id) and to_stand not in (select to_stand from taxi_order o where l.route_id=o.route_id);